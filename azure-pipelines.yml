name: $(BuildDefinitionName).$(Date:yyyyMMdd)$(Rev:.r)


trigger: none

pool:
  vmImage: 'windows-2019'

steps:
- checkout: self
  fetchDepth: 0


- powershell: |
      ## get the changed files
      $files=$(git diff --no-commit-id --name-only HEAD HEAD^)
      $temp=$files -split '/pipeline/'
      $count=$temp.Length
      $name=""
      For ($i=0; $i -lt $temp.Length; $i++)
        {

          if ($temp[$i] -like 'pl_*') 
          {
            $name=$name + $temp[$i].Replace(".json","") + "|"
          }
        }
      $name = $name.ToString()
      echo "This is the final result: $name"
      if ($name.Length -gt 0)
      {
        Write-Host "##vso[task.setvariable variable=condition]true"
      }
      else
      {
        Write-Host "##vso[task.setvariable variable=condition]false"
      }
      Write-Host "##vso[task.setvariable variable=changedFile]$name"



- task: AzurePowerShell@4
  displayName: Publish ADF resources
  inputs:
    azureSubscription: devopsconnection
    azurePowerShellVersion: latestVersion
    ScriptPath: '$(Build.SourcesDirectory)/adf/publish.ps1'
    ScriptArguments: -resourceGroupName 'app-grp' -dataFactoryName 'adfunittest' -adfFileRoot '$(System.DefaultWorkingDirectory)/adf' 


- task: NuGetCommand@2
  displayName: Restore NuGet packages
  inputs:
    command: restore
    feedsToUse: 'select'
    restoreSolution: 'adf-unit-testing\adf-unit-testing.csproj'

- task: VSBuild@1
  displayName: 'Build testing project'
  inputs:
    solution: 'adf-unit-testing\adf-unit-testing.csproj'
    configuration: 'Debug'
    clean: true

- task: AzureCLI@2
  displayName: 'Set pipeline identity variables'
  inputs:
    azureSubscription: 'devopsconnection'
    scriptType: 'pscore'
    scriptLocation: 'inlineScript'
    addSpnToEnvironment: true
    inlineScript: |
      Write-Host "##vso[task.setvariable variable=AzureTenantId;issecret=true]$env:tenantId"
      Write-Host "##vso[task.setvariable variable=AzureSubscriptionId;issecret=true]$(az account show --query 'id' --output tsv)"
      Write-Host "##vso[task.setvariable variable=AzureClientId;issecret=true]$env:servicePrincipalId"
      Write-Host "##vso[task.setvariable variable=AzureClientSecret;issecret=true]$env:servicePrincipalKey"
- task: VSTest@2
  condition: and(succeeded(), eq(variables['condition'], 'true'))
  displayName: 'Run tests'
  inputs:
    testSelector: 'testAssemblies'
    testAssemblyVer2: |
      **\adf-unit-testing.dll
      **\*Tests*.dll
      !**\*TestAdapter.dll
      !**\obj\**
      !**\bin\**\ref\**
    overrideTestrunParameters: -pl_name $(changedFile) -pl_table SalesOrderDetail
    testRunTitle: 'AdfTestRun'
